-- CREATE TABLE --
CREATE TABLE Books (
    bookId BIGINT(30) NOT NULL AUTO_INCREMENT,
    title VARCHAR(100) NOT NULL,
    description VARCHAR(1000) NOT NULL,
    author VARCHAR(100) NOT NULL,
    isbn VARCHAR(100) NOT NULL,
    coverLargeUrl VARCHAR(1000) NOT NULL,
    customerReviewRank DOUBLE(10) NOT NULL,
    standardPrice INTEGER(10) NOT NULL,
    saledPrice INTEGER(10),
    PRIMARY KEY(bookId)
);

CREATE TABLE Users (
    userId BIGINT(30) NOT NULL AUTO_INCREMENT,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(100) NOT NULL,
    picture VARCHAR(1000),
    PRIMARY KEY(userId)
);

CREATE TABLE BookUserMap (
	bookUserMapId BIGINT(30) NOT NULL AUTO_INCREMENT,
	bookId BIGINT(30) NOT NULL,
	userId BIGINT(30) NOT NULL,
	PRIMARY KEY(bookUserMapId),
	FOREIGN KEY(bookId) REFERENCES Books(bookId) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY(userId) REFERENCES Users(userId) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Reviews (
    reviewId BIGINT(30) NOT NULL AUTO_INCREMENT,
    bookId BIGINT(30) NOT NULL,
    userId BIGINT(30) NOT NULL,
    star INTEGER(30),
    comment VARCHAR(1000),
    isLike VARCHAR(5) DEFAULT 'false',
    PRIMARY KEY(reviewId),
    FOREIGN KEY(bookId) REFERENCES Books(bookId) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(userId) REFERENCES Users(userId) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Posts (
    postId BIGINT(30) NOT NULL AUTO_INCREMENT,
    title VARCHAR(2000) NOT NULL,
    author VARCHAR(2000) NOT NULL,
    content VARCHAR(2000) NOT NULL,
    postImg VARCHAR(2000),
    releasedDate VARCHAR(100),
 	PRIMARY KEY(postId)
);